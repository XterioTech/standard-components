"use strict";(self.webpackChunkxterio=self.webpackChunkxterio||[]).push([[8097],{"./node_modules/@smithy/fetch-http-handler/dist-es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BX:()=>FetchHttpHandler,CF:()=>streamCollector});var dist_es=__webpack_require__("./node_modules/@smithy/protocol-http/dist-es/index.js"),escape_uri=__webpack_require__("./node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js");function requestTimeout(timeoutInMs=0){return new Promise(((resolve,reject)=>{timeoutInMs&&setTimeout((()=>{const timeoutError=new Error(`Request did not complete within ${timeoutInMs} ms`);timeoutError.name="TimeoutError",reject(timeoutError)}),timeoutInMs)}))}const keepAliveSupport_supported=Boolean("undefined"!=typeof Request&&"keepalive"in new Request("https://[::1]"));class FetchHttpHandler{static create(instanceOrOptions){return"function"==typeof instanceOrOptions?.handle?instanceOrOptions:new FetchHttpHandler(instanceOrOptions)}constructor(options){"function"==typeof options?this.configProvider=options().then((opts=>opts||{})):(this.config=options??{},this.configProvider=Promise.resolve(this.config))}destroy(){}async handle(request,{abortSignal}={}){this.config||(this.config=await this.configProvider);const requestTimeoutInMs=this.config.requestTimeout,keepAlive=!0===this.config.keepAlive;if(abortSignal?.aborted){const abortError=new Error("Request aborted");return abortError.name="AbortError",Promise.reject(abortError)}let path=request.path;const queryString=function buildQueryString(query){const parts=[];for(let key of Object.keys(query).sort()){const value=query[key];if(key=(0,escape_uri.i)(key),Array.isArray(value))for(let i=0,iLen=value.length;i<iLen;i++)parts.push(`${key}=${(0,escape_uri.i)(value[i])}`);else{let qsEntry=key;(value||"string"==typeof value)&&(qsEntry+=`=${(0,escape_uri.i)(value)}`),parts.push(qsEntry)}}return parts.join("&")}(request.query||{});queryString&&(path+=`?${queryString}`),request.fragment&&(path+=`#${request.fragment}`);let auth="";if(null!=request.username||null!=request.password){auth=`${request.username??""}:${request.password??""}@`}const{port,method}=request,url=`${request.protocol}//${auth}${request.hostname}${port?`:${port}`:""}${path}`,body="GET"===method||"HEAD"===method?void 0:request.body,requestOptions={body,headers:new Headers(request.headers),method};body&&(requestOptions.duplex="half"),"undefined"!=typeof AbortController&&(requestOptions.signal=abortSignal),keepAliveSupport_supported&&(requestOptions.keepalive=keepAlive);const fetchRequest=new Request(url,requestOptions),raceOfPromises=[fetch(fetchRequest).then((response=>{const fetchHeaders=response.headers,transformedHeaders={};for(const pair of fetchHeaders.entries())transformedHeaders[pair[0]]=pair[1];return null!=response.body?{response:new dist_es.Zn({headers:transformedHeaders,reason:response.statusText,statusCode:response.status,body:response.body})}:response.blob().then((body=>({response:new dist_es.Zn({headers:transformedHeaders,reason:response.statusText,statusCode:response.status,body})})))})),requestTimeout(requestTimeoutInMs)];return abortSignal&&raceOfPromises.push(new Promise(((resolve,reject)=>{abortSignal.onabort=()=>{const abortError=new Error("Request aborted");abortError.name="AbortError",reject(abortError)}}))),Promise.race(raceOfPromises)}updateHttpClientConfig(key,value){this.config=void 0,this.configProvider=this.configProvider.then((config=>(config[key]=value,config)))}httpHandlerConfigs(){return this.config??{}}}var util_base64_dist_es=__webpack_require__("./node_modules/@smithy/util-base64/dist-es/index.js");const streamCollector=stream=>"function"==typeof Blob&&stream instanceof Blob?async function collectBlob(blob){const base64=await function readToBase64(blob){return new Promise(((resolve,reject)=>{const reader=new FileReader;reader.onloadend=()=>{if(2!==reader.readyState)return reject(new Error("Reader aborted too early"));const result=reader.result??"",commaIndex=result.indexOf(","),dataOffset=commaIndex>-1?commaIndex+1:result.length;resolve(result.substring(dataOffset))},reader.onabort=()=>reject(new Error("Read aborted")),reader.onerror=()=>reject(reader.error),reader.readAsDataURL(blob)}))}(blob),arrayBuffer=(0,util_base64_dist_es.G)(base64);return new Uint8Array(arrayBuffer)}(stream):async function collectStream(stream){const chunks=[],reader=stream.getReader();let isDone=!1,length=0;for(;!isDone;){const{done,value}=await reader.read();value&&(chunks.push(value),length+=value.length),isDone=done}const collected=new Uint8Array(length);let offset=0;for(const chunk of chunks)collected.set(chunk,offset),offset+=chunk.length;return collected}(stream)},"./node_modules/@smithy/protocol-http/dist-es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aW:()=>HttpRequest,Zn:()=>HttpResponse,cA:()=>getHttpHandlerExtensionConfiguration,AO:()=>resolveHttpHandlerRuntimeConfig});const getHttpHandlerExtensionConfiguration=runtimeConfig=>{let httpHandler=runtimeConfig.httpHandler;return{setHttpHandler(handler){httpHandler=handler},httpHandler:()=>httpHandler,updateHttpClientConfig(key,value){httpHandler.updateHttpClientConfig(key,value)},httpHandlerConfigs:()=>httpHandler.httpHandlerConfigs()}},resolveHttpHandlerRuntimeConfig=httpHandlerExtensionConfiguration=>({httpHandler:httpHandlerExtensionConfiguration.httpHandler()});__webpack_require__("./node_modules/@smithy/types/dist-es/index.js");class HttpRequest{constructor(options){this.method=options.method||"GET",this.hostname=options.hostname||"localhost",this.port=options.port,this.query=options.query||{},this.headers=options.headers||{},this.body=options.body,this.protocol=options.protocol?":"!==options.protocol.slice(-1)?`${options.protocol}:`:options.protocol:"https:",this.path=options.path?"/"!==options.path.charAt(0)?`/${options.path}`:options.path:"/",this.username=options.username,this.password=options.password,this.fragment=options.fragment}static isInstance(request){if(!request)return!1;const req=request;return"method"in req&&"protocol"in req&&"hostname"in req&&"path"in req&&"object"==typeof req.query&&"object"==typeof req.headers}clone(){const cloned=new HttpRequest({...this,headers:{...this.headers}});return cloned.query&&(cloned.query=function cloneQuery(query){return Object.keys(query).reduce(((carry,paramName)=>{const param=query[paramName];return{...carry,[paramName]:Array.isArray(param)?[...param]:param}}),{})}(cloned.query)),cloned}}class HttpResponse{constructor(options){this.statusCode=options.statusCode,this.reason=options.reason,this.headers=options.headers||{},this.body=options.body}static isInstance(response){if(!response)return!1;const resp=response;return"number"==typeof resp.statusCode&&"object"==typeof resp.headers}}},"./node_modules/@smithy/smithy-client/dist-es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{KU:()=>Client,mY:()=>Command,vk:()=>NoOpLogger,oc:()=>SENSITIVE_STRING,sI:()=>ServiceException,F3:()=>_json,Wg:()=>collectBody,TW:()=>createAggregatedClient,to:()=>decorateServiceException,zE:()=>expectBoolean,u$:()=>expectInt32,CE:()=>expectNonNull,Fx:()=>expectNumber,pY:()=>expectString,jc:()=>extendedEncodeURIComponent,kE:()=>getDefaultExtensionConfiguration,sT:()=>getValueFromTextNode,jv:()=>loadConfigsForDefaultMode,KX:()=>parseEpochTimestamp,uj:()=>parseRfc3339DateTime,aH:()=>parseRfc3339DateTimeWithOffset,SQ:()=>resolveDefaultRuntimeConfig,AF:()=>strictParseInt32,qn:()=>take,PC:()=>withBaseException});class NoOpLogger{trace(){}debug(){}info(){}warn(){}error(){}}var console=__webpack_require__("./node_modules/console-browserify/index.js");const getAllAliases=(name,aliases)=>{const _aliases=[];if(name&&_aliases.push(name),aliases)for(const alias of aliases)_aliases.push(alias);return _aliases},getMiddlewareNameWithAliases=(name,aliases)=>`${name||"anonymous"}${aliases&&aliases.length>0?` (a.k.a. ${aliases.join(",")})`:""}`,constructStack=()=>{let absoluteEntries=[],relativeEntries=[],identifyOnResolve=!1;const entriesNameSet=new Set,cloneTo=toStack=>(absoluteEntries.forEach((entry=>{toStack.add(entry.middleware,{...entry})})),relativeEntries.forEach((entry=>{toStack.addRelativeTo(entry.middleware,{...entry})})),toStack.identifyOnResolve?.(stack.identifyOnResolve()),toStack),expandRelativeMiddlewareList=from=>{const expandedMiddlewareList=[];return from.before.forEach((entry=>{0===entry.before.length&&0===entry.after.length?expandedMiddlewareList.push(entry):expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry))})),expandedMiddlewareList.push(from),from.after.reverse().forEach((entry=>{0===entry.before.length&&0===entry.after.length?expandedMiddlewareList.push(entry):expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry))})),expandedMiddlewareList},getMiddlewareList=(debug=!1)=>{const normalizedAbsoluteEntries=[],normalizedRelativeEntries=[],normalizedEntriesNameMap={};absoluteEntries.forEach((entry=>{const normalizedEntry={...entry,before:[],after:[]};for(const alias of getAllAliases(normalizedEntry.name,normalizedEntry.aliases))normalizedEntriesNameMap[alias]=normalizedEntry;normalizedAbsoluteEntries.push(normalizedEntry)})),relativeEntries.forEach((entry=>{const normalizedEntry={...entry,before:[],after:[]};for(const alias of getAllAliases(normalizedEntry.name,normalizedEntry.aliases))normalizedEntriesNameMap[alias]=normalizedEntry;normalizedRelativeEntries.push(normalizedEntry)})),normalizedRelativeEntries.forEach((entry=>{if(entry.toMiddleware){const toMiddleware=normalizedEntriesNameMap[entry.toMiddleware];if(void 0===toMiddleware){if(debug)return;throw new Error(`${entry.toMiddleware} is not found when adding ${getMiddlewareNameWithAliases(entry.name,entry.aliases)} middleware ${entry.relation} ${entry.toMiddleware}`)}"after"===entry.relation&&toMiddleware.after.push(entry),"before"===entry.relation&&toMiddleware.before.push(entry)}}));var entries;return(entries=normalizedAbsoluteEntries,entries.sort(((a,b)=>stepWeights[b.step]-stepWeights[a.step]||priorityWeights[b.priority||"normal"]-priorityWeights[a.priority||"normal"]))).map(expandRelativeMiddlewareList).reduce(((wholeList,expandedMiddlewareList)=>(wholeList.push(...expandedMiddlewareList),wholeList)),[])},stack={add:(middleware,options={})=>{const{name,override,aliases:_aliases}=options,entry={step:"initialize",priority:"normal",middleware,...options},aliases=getAllAliases(name,_aliases);if(aliases.length>0){if(aliases.some((alias=>entriesNameSet.has(alias)))){if(!override)throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name,_aliases)}'`);for(const alias of aliases){const toOverrideIndex=absoluteEntries.findIndex((entry=>entry.name===alias||entry.aliases?.some((a=>a===alias))));if(-1===toOverrideIndex)continue;const toOverride=absoluteEntries[toOverrideIndex];if(toOverride.step!==entry.step||entry.priority!==toOverride.priority)throw new Error(`"${getMiddlewareNameWithAliases(toOverride.name,toOverride.aliases)}" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be overridden by "${getMiddlewareNameWithAliases(name,_aliases)}" middleware with ${entry.priority} priority in ${entry.step} step.`);absoluteEntries.splice(toOverrideIndex,1)}}for(const alias of aliases)entriesNameSet.add(alias)}absoluteEntries.push(entry)},addRelativeTo:(middleware,options)=>{const{name,override,aliases:_aliases}=options,entry={middleware,...options},aliases=getAllAliases(name,_aliases);if(aliases.length>0){if(aliases.some((alias=>entriesNameSet.has(alias)))){if(!override)throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name,_aliases)}'`);for(const alias of aliases){const toOverrideIndex=relativeEntries.findIndex((entry=>entry.name===alias||entry.aliases?.some((a=>a===alias))));if(-1===toOverrideIndex)continue;const toOverride=relativeEntries[toOverrideIndex];if(toOverride.toMiddleware!==entry.toMiddleware||toOverride.relation!==entry.relation)throw new Error(`"${getMiddlewareNameWithAliases(toOverride.name,toOverride.aliases)}" middleware ${toOverride.relation} "${toOverride.toMiddleware}" middleware cannot be overridden by "${getMiddlewareNameWithAliases(name,_aliases)}" middleware ${entry.relation} "${entry.toMiddleware}" middleware.`);relativeEntries.splice(toOverrideIndex,1)}}for(const alias of aliases)entriesNameSet.add(alias)}relativeEntries.push(entry)},clone:()=>cloneTo(constructStack()),use:plugin=>{plugin.applyToStack(stack)},remove:toRemove=>"string"==typeof toRemove?(toRemove=>{let isRemoved=!1;const filterCb=entry=>{const aliases=getAllAliases(entry.name,entry.aliases);if(aliases.includes(toRemove)){isRemoved=!0;for(const alias of aliases)entriesNameSet.delete(alias);return!1}return!0};return absoluteEntries=absoluteEntries.filter(filterCb),relativeEntries=relativeEntries.filter(filterCb),isRemoved})(toRemove):(toRemove=>{let isRemoved=!1;const filterCb=entry=>{if(entry.middleware===toRemove){isRemoved=!0;for(const alias of getAllAliases(entry.name,entry.aliases))entriesNameSet.delete(alias);return!1}return!0};return absoluteEntries=absoluteEntries.filter(filterCb),relativeEntries=relativeEntries.filter(filterCb),isRemoved})(toRemove),removeByTag:toRemove=>{let isRemoved=!1;const filterCb=entry=>{const{tags,name,aliases:_aliases}=entry;if(tags&&tags.includes(toRemove)){const aliases=getAllAliases(name,_aliases);for(const alias of aliases)entriesNameSet.delete(alias);return isRemoved=!0,!1}return!0};return absoluteEntries=absoluteEntries.filter(filterCb),relativeEntries=relativeEntries.filter(filterCb),isRemoved},concat:from=>{const cloned=cloneTo(constructStack());return cloned.use(from),cloned.identifyOnResolve(identifyOnResolve||cloned.identifyOnResolve()||(from.identifyOnResolve?.()??!1)),cloned},applyToStack:cloneTo,identify:()=>getMiddlewareList(!0).map((mw=>{const step=mw.step??mw.relation+" "+mw.toMiddleware;return getMiddlewareNameWithAliases(mw.name,mw.aliases)+" - "+step})),identifyOnResolve:toggle=>("boolean"==typeof toggle&&(identifyOnResolve=toggle),identifyOnResolve),resolve:(handler,context)=>{for(const middleware of getMiddlewareList().map((entry=>entry.middleware)).reverse())handler=middleware(handler,context);return identifyOnResolve&&console.log(stack.identify()),handler}};return stack},stepWeights={initialize:5,serialize:4,build:3,finalizeRequest:2,deserialize:1},priorityWeights={high:3,normal:2,low:1};class Client{constructor(config){this.middlewareStack=constructStack(),this.config=config}send(command,optionsOrCb,cb){const options="function"!=typeof optionsOrCb?optionsOrCb:void 0,callback="function"==typeof optionsOrCb?optionsOrCb:cb,handler=command.resolveMiddleware(this.middlewareStack,this.config,options);if(!callback)return handler(command).then((result=>result.output));handler(command).then((result=>callback(null,result.output)),(err=>callback(err))).catch((()=>{}))}destroy(){this.config.requestHandler.destroy&&this.config.requestHandler.destroy()}}var dist_es=__webpack_require__("./node_modules/@smithy/util-stream/dist-es/index.js");const collectBody=async(streamBody=new Uint8Array,context)=>{if(streamBody instanceof Uint8Array)return dist_es.HE.mutate(streamBody);if(!streamBody)return dist_es.HE.mutate(new Uint8Array);const fromContext=context.streamCollector(streamBody);return dist_es.HE.mutate(await fromContext)};var types_dist_es=__webpack_require__("./node_modules/@smithy/types/dist-es/index.js");class Command{constructor(){this.middlewareStack=constructStack()}static classBuilder(){return new ClassBuilder}resolveMiddlewareWithContext(clientStack,configuration,options,{middlewareFn,clientName,commandName,inputFilterSensitiveLog,outputFilterSensitiveLog,smithyContext,additionalContext,CommandCtor}){for(const mw of middlewareFn.bind(this)(CommandCtor,clientStack,configuration,options))this.middlewareStack.use(mw);const stack=clientStack.concat(this.middlewareStack),{logger}=configuration,handlerExecutionContext={logger,clientName,commandName,inputFilterSensitiveLog,outputFilterSensitiveLog,[types_dist_es.zK]:{...smithyContext},...additionalContext},{requestHandler}=configuration;return stack.resolve((request=>requestHandler.handle(request.request,options||{})),handlerExecutionContext)}}class ClassBuilder{constructor(){this._init=()=>{},this._ep={},this._middlewareFn=()=>[],this._commandName="",this._clientName="",this._additionalContext={},this._smithyContext={},this._inputFilterSensitiveLog=_=>_,this._outputFilterSensitiveLog=_=>_,this._serializer=null,this._deserializer=null}init(cb){this._init=cb}ep(endpointParameterInstructions){return this._ep=endpointParameterInstructions,this}m(middlewareSupplier){return this._middlewareFn=middlewareSupplier,this}s(service,operation,smithyContext={}){return this._smithyContext={service,operation,...smithyContext},this}c(additionalContext={}){return this._additionalContext=additionalContext,this}n(clientName,commandName){return this._clientName=clientName,this._commandName=commandName,this}f(inputFilter=(_=>_),outputFilter=(_=>_)){return this._inputFilterSensitiveLog=inputFilter,this._outputFilterSensitiveLog=outputFilter,this}ser(serializer){return this._serializer=serializer,this}de(deserializer){return this._deserializer=deserializer,this}build(){const closure=this;let CommandRef;return CommandRef=class extends Command{static getEndpointParameterInstructions(){return closure._ep}constructor(...[input]){super(),this.serialize=closure._serializer,this.deserialize=closure._deserializer,this.input=input??{},closure._init(this)}resolveMiddleware(stack,configuration,options){return this.resolveMiddlewareWithContext(stack,configuration,options,{CommandCtor:CommandRef,middlewareFn:closure._middlewareFn,clientName:closure._clientName,commandName:closure._commandName,inputFilterSensitiveLog:closure._inputFilterSensitiveLog,outputFilterSensitiveLog:closure._outputFilterSensitiveLog,smithyContext:closure._smithyContext,additionalContext:closure._additionalContext})}}}}const SENSITIVE_STRING="***SensitiveInformation***",createAggregatedClient=(commands,Client)=>{for(const command of Object.keys(commands)){const CommandCtor=commands[command],methodImpl=async function(args,optionsOrCb,cb){const command=new CommandCtor(args);if("function"==typeof optionsOrCb)this.send(command,optionsOrCb);else{if("function"!=typeof cb)return this.send(command,optionsOrCb);if("object"!=typeof optionsOrCb)throw new Error("Expected http options but got "+typeof optionsOrCb);this.send(command,optionsOrCb||{},cb)}},methodName=(command[0].toLowerCase()+command.slice(1)).replace(/Command$/,"");Client.prototype[methodName]=methodImpl}};var parse_utils_console=__webpack_require__("./node_modules/console-browserify/index.js");const expectBoolean=value=>{if(null!=value){if("number"==typeof value){if(0!==value&&1!==value||logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`)),0===value)return!1;if(1===value)return!0}if("string"==typeof value){const lower=value.toLowerCase();if("false"!==lower&&"true"!==lower||logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`)),"false"===lower)return!1;if("true"===lower)return!0}if("boolean"==typeof value)return value;throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`)}},expectNumber=value=>{if(null!=value){if("string"==typeof value){const parsed=parseFloat(value);if(!Number.isNaN(parsed))return String(parsed)!==String(value)&&logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`)),parsed}if("number"==typeof value)return value;throw new TypeError(`Expected number, got ${typeof value}: ${value}`)}},MAX_FLOAT=Math.ceil(2**127*(2-2**-23)),expectFloat32=value=>{const expected=expectNumber(value);if(void 0!==expected&&!Number.isNaN(expected)&&expected!==1/0&&expected!==-1/0&&Math.abs(expected)>MAX_FLOAT)throw new TypeError(`Expected 32-bit float, got ${value}`);return expected},expectLong=value=>{if(null!=value){if(Number.isInteger(value)&&!Number.isNaN(value))return value;throw new TypeError(`Expected integer, got ${typeof value}: ${value}`)}},expectInt32=value=>expectSizedInt(value,32),expectShort=value=>expectSizedInt(value,16),expectByte=value=>expectSizedInt(value,8),expectSizedInt=(value,size)=>{const expected=expectLong(value);if(void 0!==expected&&castInt(expected,size)!==expected)throw new TypeError(`Expected ${size}-bit integer, got ${value}`);return expected},castInt=(value,size)=>{switch(size){case 32:return Int32Array.of(value)[0];case 16:return Int16Array.of(value)[0];case 8:return Int8Array.of(value)[0]}},expectNonNull=(value,location)=>{if(null==value){if(location)throw new TypeError(`Expected a non-null value for ${location}`);throw new TypeError("Expected a non-null value")}return value},expectString=value=>{if(null!=value){if("string"==typeof value)return value;if(["boolean","number","bigint"].includes(typeof value))return logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`)),String(value);throw new TypeError(`Expected string, got ${typeof value}: ${value}`)}},strictParseDouble=value=>expectNumber("string"==typeof value?parseNumber(value):value),NUMBER_REGEX=/(-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?)|(-?Infinity)|(NaN)/g,parseNumber=value=>{const matches=value.match(NUMBER_REGEX);if(null===matches||matches[0].length!==value.length)throw new TypeError("Expected real number, got implicit NaN");return parseFloat(value)},strictParseInt32=value=>expectInt32("string"==typeof value?parseNumber(value):value),parse_utils_strictParseShort=value=>expectShort("string"==typeof value?parseNumber(value):value),stackTraceWarning=message=>String(new TypeError(message).stack||message).split("\n").slice(0,5).filter((s=>!s.includes("stackTraceWarning"))).join("\n"),logger={warn:parse_utils_console.warn},MONTHS=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];const RFC3339=new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?[zZ]$/),parseRfc3339DateTime=value=>{if(null==value)return;if("string"!=typeof value)throw new TypeError("RFC-3339 date-times must be expressed as strings");const match=RFC3339.exec(value);if(!match)throw new TypeError("Invalid RFC-3339 date-time value");const[_,yearStr,monthStr,dayStr,hours,minutes,seconds,fractionalMilliseconds]=match,year=parse_utils_strictParseShort(stripLeadingZeroes(yearStr)),month=parseDateValue(monthStr,"month",1,12),day=parseDateValue(dayStr,"day",1,31);return buildDate(year,month,day,{hours,minutes,seconds,fractionalMilliseconds})},RFC3339_WITH_OFFSET=new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?(([-+]\d{2}\:\d{2})|[zZ])$/),parseRfc3339DateTimeWithOffset=value=>{if(null==value)return;if("string"!=typeof value)throw new TypeError("RFC-3339 date-times must be expressed as strings");const match=RFC3339_WITH_OFFSET.exec(value);if(!match)throw new TypeError("Invalid RFC-3339 date-time value");const[_,yearStr,monthStr,dayStr,hours,minutes,seconds,fractionalMilliseconds,offsetStr]=match,year=parse_utils_strictParseShort(stripLeadingZeroes(yearStr)),month=parseDateValue(monthStr,"month",1,12),day=parseDateValue(dayStr,"day",1,31),date=buildDate(year,month,day,{hours,minutes,seconds,fractionalMilliseconds});return"Z"!=offsetStr.toUpperCase()&&date.setTime(date.getTime()-parseOffsetToMilliseconds(offsetStr)),date},parseEpochTimestamp=value=>{if(null==value)return;let valueAsDouble;if("number"==typeof value)valueAsDouble=value;else{if("string"!=typeof value)throw new TypeError("Epoch timestamps must be expressed as floating point numbers or their string representation");valueAsDouble=strictParseDouble(value)}if(Number.isNaN(valueAsDouble)||valueAsDouble===1/0||valueAsDouble===-1/0)throw new TypeError("Epoch timestamps must be valid, non-Infinite, non-NaN numerics");return new Date(Math.round(1e3*valueAsDouble))},buildDate=(year,month,day,time)=>{const adjustedMonth=month-1;return validateDayOfMonth(year,adjustedMonth,day),new Date(Date.UTC(year,adjustedMonth,day,parseDateValue(time.hours,"hour",0,23),parseDateValue(time.minutes,"minute",0,59),parseDateValue(time.seconds,"seconds",0,60),parseMilliseconds(time.fractionalMilliseconds)))},DAYS_IN_MONTH=[31,28,31,30,31,30,31,31,30,31,30,31],validateDayOfMonth=(year,month,day)=>{let maxDays=DAYS_IN_MONTH[month];if(1===month&&isLeapYear(year)&&(maxDays=29),day>maxDays)throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`)},isLeapYear=year=>year%4==0&&(year%100!=0||year%400==0),parseDateValue=(value,type,lower,upper)=>{const dateVal=(value=>expectByte("string"==typeof value?parseNumber(value):value))(stripLeadingZeroes(value));if(dateVal<lower||dateVal>upper)throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);return dateVal},parseMilliseconds=value=>null==value?0:1e3*(value=>expectFloat32("string"==typeof value?parseNumber(value):value))("0."+value),parseOffsetToMilliseconds=value=>{const directionStr=value[0];let direction=1;if("+"==directionStr)direction=1;else{if("-"!=directionStr)throw new TypeError(`Offset direction, ${directionStr}, must be "+" or "-"`);direction=-1}return direction*(60*Number(value.substring(1,3))+Number(value.substring(4,6)))*60*1e3},stripLeadingZeroes=value=>{let idx=0;for(;idx<value.length-1&&"0"===value.charAt(idx);)idx++;return 0===idx?value:value.slice(idx)};class ServiceException extends Error{constructor(options){super(options.message),Object.setPrototypeOf(this,ServiceException.prototype),this.name=options.name,this.$fault=options.$fault,this.$metadata=options.$metadata}}const decorateServiceException=(exception,additions={})=>{Object.entries(additions).filter((([,v])=>void 0!==v)).forEach((([k,v])=>{null!=exception[k]&&""!==exception[k]||(exception[k]=v)}));const message=exception.message||exception.Message||"UnknownError";return exception.message=message,delete exception.Message,exception},withBaseException=ExceptionCtor=>({output,parsedBody,errorCode})=>{(({output,parsedBody,exceptionCtor,errorCode})=>{const $metadata=deserializeMetadata(output),statusCode=$metadata.httpStatusCode?$metadata.httpStatusCode+"":void 0,response=new exceptionCtor({name:parsedBody?.code||parsedBody?.Code||errorCode||statusCode||"UnknownError",$fault:"client",$metadata});throw decorateServiceException(response,parsedBody)})({output,parsedBody,exceptionCtor:ExceptionCtor,errorCode})},deserializeMetadata=output=>({httpStatusCode:output.statusCode,requestId:output.headers["x-amzn-requestid"]??output.headers["x-amzn-request-id"]??output.headers["x-amz-request-id"],extendedRequestId:output.headers["x-amz-id-2"],cfId:output.headers["x-amz-cf-id"]}),loadConfigsForDefaultMode=mode=>{switch(mode){case"standard":case"cross-region":return{retryMode:"standard",connectionTimeout:3100};case"in-region":return{retryMode:"standard",connectionTimeout:1100};case"mobile":return{retryMode:"standard",connectionTimeout:3e4};default:return{}}},getChecksumConfiguration=runtimeConfig=>{const checksumAlgorithms=[];for(const id in types_dist_es.f3){const algorithmId=types_dist_es.f3[id];void 0!==runtimeConfig[algorithmId]&&checksumAlgorithms.push({algorithmId:()=>algorithmId,checksumConstructor:()=>runtimeConfig[algorithmId]})}return{_checksumAlgorithms:checksumAlgorithms,addChecksumAlgorithm(algo){this._checksumAlgorithms.push(algo)},checksumAlgorithms(){return this._checksumAlgorithms}}},resolveChecksumRuntimeConfig=clientConfig=>{const runtimeConfig={};return clientConfig.checksumAlgorithms().forEach((checksumAlgorithm=>{runtimeConfig[checksumAlgorithm.algorithmId()]=checksumAlgorithm.checksumConstructor()})),runtimeConfig},getRetryConfiguration=runtimeConfig=>{let _retryStrategy=runtimeConfig.retryStrategy;return{setRetryStrategy(retryStrategy){_retryStrategy=retryStrategy},retryStrategy:()=>_retryStrategy}},resolveRetryRuntimeConfig=retryStrategyConfiguration=>{const runtimeConfig={};return runtimeConfig.retryStrategy=retryStrategyConfiguration.retryStrategy(),runtimeConfig},getDefaultExtensionConfiguration=runtimeConfig=>({...getChecksumConfiguration(runtimeConfig),...getRetryConfiguration(runtimeConfig)}),resolveDefaultRuntimeConfig=config=>({...resolveChecksumRuntimeConfig(config),...resolveRetryRuntimeConfig(config)});function extendedEncodeURIComponent(str){return encodeURIComponent(str).replace(/[!'()*]/g,(function(c){return"%"+c.charCodeAt(0).toString(16).toUpperCase()}))}const getValueFromTextNode=obj=>{for(const key in obj)obj.hasOwnProperty(key)&&void 0!==obj[key]["#text"]?obj[key]=obj[key]["#text"]:"object"==typeof obj[key]&&null!==obj[key]&&(obj[key]=getValueFromTextNode(obj[key]));return obj},StringWrapper=function(){const Class=Object.getPrototypeOf(this).constructor,instance=new(Function.bind.apply(String,[null,...arguments]));return Object.setPrototypeOf(instance,Class.prototype),instance};StringWrapper.prototype=Object.create(String.prototype,{constructor:{value:StringWrapper,enumerable:!1,writable:!0,configurable:!0}}),Object.setPrototypeOf(StringWrapper,String);const take=(source,instructions)=>{const out={};for(const key in instructions)applyInstruction(out,source,instructions,key);return out},applyInstruction=(target,source,instructions,targetKey)=>{if(null!==source){let instruction=instructions[targetKey];"function"==typeof instruction&&(instruction=[,instruction]);const[filter=nonNullish,valueFn=pass,sourceKey=targetKey]=instruction;return void(("function"==typeof filter&&filter(source[sourceKey])||"function"!=typeof filter&&filter)&&(target[targetKey]=valueFn(source[sourceKey])))}let[filter,value]=instructions[targetKey];if("function"==typeof value){let _value;const defaultFilterPassed=void 0===filter&&null!=(_value=value()),customFilterPassed="function"==typeof filter&&!!filter(void 0)||"function"!=typeof filter&&!!filter;defaultFilterPassed?target[targetKey]=_value:customFilterPassed&&(target[targetKey]=value())}else{const defaultFilterPassed=void 0===filter&&null!=value,customFilterPassed="function"==typeof filter&&!!filter(value)||"function"!=typeof filter&&!!filter;(defaultFilterPassed||customFilterPassed)&&(target[targetKey]=value)}},nonNullish=_=>null!=_,pass=_=>_,_json=obj=>{if(null==obj)return{};if(Array.isArray(obj))return obj.filter((_=>null!=_)).map(_json);if("object"==typeof obj){const target={};for(const key of Object.keys(obj))null!=obj[key]&&(target[key]=_json(obj[key]));return target}return obj}},"./node_modules/@smithy/types/dist-es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var HttpAuthLocation,HttpApiKeyAuthLocation,EndpointURLScheme,AlgorithmId;__webpack_require__.d(__webpack_exports__,{f3:()=>AlgorithmId,cj:()=>EndpointURLScheme,zK:()=>SMITHY_CONTEXT_KEY}),function(HttpAuthLocation){HttpAuthLocation.HEADER="header",HttpAuthLocation.QUERY="query"}(HttpAuthLocation||(HttpAuthLocation={})),function(HttpApiKeyAuthLocation){HttpApiKeyAuthLocation.HEADER="header",HttpApiKeyAuthLocation.QUERY="query"}(HttpApiKeyAuthLocation||(HttpApiKeyAuthLocation={})),function(EndpointURLScheme){EndpointURLScheme.HTTP="http",EndpointURLScheme.HTTPS="https"}(EndpointURLScheme||(EndpointURLScheme={})),function(AlgorithmId){AlgorithmId.MD5="md5",AlgorithmId.CRC32="crc32",AlgorithmId.CRC32C="crc32c",AlgorithmId.SHA1="sha1",AlgorithmId.SHA256="sha256"}(AlgorithmId||(AlgorithmId={}));var FieldPosition;!function(FieldPosition){FieldPosition[FieldPosition.HEADER=0]="HEADER",FieldPosition[FieldPosition.TRAILER=1]="TRAILER"}(FieldPosition||(FieldPosition={}));const SMITHY_CONTEXT_KEY="__smithy_context";var IniSectionType,RequestHandlerProtocol;!function(IniSectionType){IniSectionType.PROFILE="profile",IniSectionType.SSO_SESSION="sso-session",IniSectionType.SERVICES="services"}(IniSectionType||(IniSectionType={})),function(RequestHandlerProtocol){RequestHandlerProtocol.HTTP_0_9="http/0.9",RequestHandlerProtocol.HTTP_1_0="http/1.0",RequestHandlerProtocol.TDS_8_0="tds/8.0"}(RequestHandlerProtocol||(RequestHandlerProtocol={}))},"./node_modules/@smithy/util-base64/dist-es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{G:()=>fromBase64,s:()=>toBase64});const alphabetByEncoding={},alphabetByValue=new Array(64);for(let i=0,start="A".charCodeAt(0),limit="Z".charCodeAt(0);i+start<=limit;i++){const char=String.fromCharCode(i+start);alphabetByEncoding[char]=i,alphabetByValue[i]=char}for(let i=0,start="a".charCodeAt(0),limit="z".charCodeAt(0);i+start<=limit;i++){const char=String.fromCharCode(i+start),index=i+26;alphabetByEncoding[char]=index,alphabetByValue[index]=char}for(let i=0;i<10;i++){alphabetByEncoding[i.toString(10)]=i+52;const char=i.toString(10),index=i+52;alphabetByEncoding[char]=index,alphabetByValue[index]=char}alphabetByEncoding["+"]=62,alphabetByValue[62]="+",alphabetByEncoding["/"]=63,alphabetByValue[63]="/";const bitsPerLetter=6,bitsPerByte=8,maxLetterValue=63,fromBase64=input=>{let totalByteLength=input.length/4*3;"=="===input.slice(-2)?totalByteLength-=2:"="===input.slice(-1)&&totalByteLength--;const out=new ArrayBuffer(totalByteLength),dataView=new DataView(out);for(let i=0;i<input.length;i+=4){let bits=0,bitLength=0;for(let j=i,limit=i+3;j<=limit;j++)if("="!==input[j]){if(!(input[j]in alphabetByEncoding))throw new TypeError(`Invalid character ${input[j]} in base64 string.`);bits|=alphabetByEncoding[input[j]]<<(limit-j)*bitsPerLetter,bitLength+=bitsPerLetter}else bits>>=bitsPerLetter;const chunkOffset=i/4*3;bits>>=bitLength%bitsPerByte;const byteLength=Math.floor(bitLength/bitsPerByte);for(let k=0;k<byteLength;k++){const offset=(byteLength-k-1)*bitsPerByte;dataView.setUint8(chunkOffset+k,(bits&255<<offset)>>offset)}}return new Uint8Array(out)};var fromUtf8_browser=__webpack_require__("./node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js");function toBase64(_input){let input;input="string"==typeof _input?(0,fromUtf8_browser.$)(_input):_input;const isArrayLike="object"==typeof input&&"number"==typeof input.length,isUint8Array="object"==typeof input&&"number"==typeof input.byteOffset&&"number"==typeof input.byteLength;if(!isArrayLike&&!isUint8Array)throw new Error("@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.");let str="";for(let i=0;i<input.length;i+=3){let bits=0,bitLength=0;for(let j=i,limit=Math.min(i+3,input.length);j<limit;j++)bits|=input[j]<<(limit-j-1)*bitsPerByte,bitLength+=bitsPerByte;const bitClusterCount=Math.ceil(bitLength/bitsPerLetter);bits<<=bitClusterCount*bitsPerLetter-bitLength;for(let k=1;k<=bitClusterCount;k++){const offset=(bitClusterCount-k)*bitsPerLetter;str+=alphabetByValue[(bits&maxLetterValue<<offset)>>offset]}str+="==".slice(0,4-bitClusterCount)}return str}},"./node_modules/@smithy/util-hex-encoding/dist-es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>fromHex,N:()=>toHex});const SHORT_TO_HEX={},HEX_TO_SHORT={};for(let i=0;i<256;i++){let encodedByte=i.toString(16).toLowerCase();1===encodedByte.length&&(encodedByte=`0${encodedByte}`),SHORT_TO_HEX[i]=encodedByte,HEX_TO_SHORT[encodedByte]=i}function fromHex(encoded){if(encoded.length%2!=0)throw new Error("Hex encoded strings must have an even number length");const out=new Uint8Array(encoded.length/2);for(let i=0;i<encoded.length;i+=2){const encodedByte=encoded.slice(i,i+2).toLowerCase();if(!(encodedByte in HEX_TO_SHORT))throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);out[i/2]=HEX_TO_SHORT[encodedByte]}return out}function toHex(bytes){let out="";for(let i=0;i<bytes.byteLength;i++)out+=SHORT_TO_HEX[bytes[i]];return out}},"./node_modules/@smithy/util-stream/dist-es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{HE:()=>Uint8ArrayBlobAdapter,Ou:()=>sdkStreamMixin});var dist_es=__webpack_require__("./node_modules/@smithy/util-base64/dist-es/index.js"),toUtf8_browser=__webpack_require__("./node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js"),fromUtf8_browser=__webpack_require__("./node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js");class Uint8ArrayBlobAdapter extends Uint8Array{static fromString(source,encoding="utf-8"){if("string"==typeof source)return function transformFromString(str,encoding){return"base64"===encoding?Uint8ArrayBlobAdapter.mutate((0,dist_es.G)(str)):Uint8ArrayBlobAdapter.mutate((0,fromUtf8_browser.$)(str))}(source,encoding);throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`)}static mutate(source){return Object.setPrototypeOf(source,Uint8ArrayBlobAdapter.prototype),source}transformToString(encoding="utf-8"){return function transformToString(payload,encoding="utf-8"){return"base64"===encoding?(0,dist_es.s)(payload):(0,toUtf8_browser.G)(payload)}(this,encoding)}}var fetch_http_handler_dist_es=__webpack_require__("./node_modules/@smithy/fetch-http-handler/dist-es/index.js"),util_hex_encoding_dist_es=__webpack_require__("./node_modules/@smithy/util-hex-encoding/dist-es/index.js");const sdkStreamMixin=stream=>{if(!isBlobInstance(stream)&&!isReadableStreamInstance(stream)){throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${stream?.__proto__?.constructor?.name||stream}`)}let transformed=!1;const transformToByteArray=async()=>{if(transformed)throw new Error("The stream has already been transformed.");return transformed=!0,await(0,fetch_http_handler_dist_es.CF)(stream)};return Object.assign(stream,{transformToByteArray,transformToString:async encoding=>{const buf=await transformToByteArray();if("base64"===encoding)return(0,dist_es.s)(buf);if("hex"===encoding)return(0,util_hex_encoding_dist_es.N)(buf);if(void 0===encoding||"utf8"===encoding||"utf-8"===encoding)return(0,toUtf8_browser.G)(buf);if("function"==typeof TextDecoder)return new TextDecoder(encoding).decode(buf);throw new Error("TextDecoder is not available, please make sure polyfill is provided.")},transformToWebStream:()=>{if(transformed)throw new Error("The stream has already been transformed.");if(transformed=!0,isBlobInstance(stream))return(blob=>{if("function"!=typeof blob.stream)throw new Error("Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.\nIf you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body");return blob.stream()})(stream);if(isReadableStreamInstance(stream))return stream;throw new Error(`Cannot transform payload to web stream, got ${stream}`)}})},isBlobInstance=stream=>"function"==typeof Blob&&stream instanceof Blob,isReadableStreamInstance=stream=>"function"==typeof ReadableStream&&stream instanceof ReadableStream},"./node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{i:()=>escapeUri});const escapeUri=uri=>encodeURIComponent(uri).replace(/[!'()*]/g,hexEncode),hexEncode=c=>`%${c.charCodeAt(0).toString(16).toUpperCase()}`},"./node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>fromUtf8});const fromUtf8=input=>(new TextEncoder).encode(input)},"./node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{G:()=>toUtf8});const toUtf8=input=>{if("string"==typeof input)return input;if("object"!=typeof input||"number"!=typeof input.byteOffset||"number"!=typeof input.byteLength)throw new Error("@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.");return new TextDecoder("utf-8").decode(input)}}}]);