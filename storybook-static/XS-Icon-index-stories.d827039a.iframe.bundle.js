"use strict";(self.webpackChunkxterio=self.webpackChunkxterio||[]).push([[3641],{"./src/packages/XS-Icon/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Template:()=>Template,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-copy-to-clipboard/lib/index.js"),react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_1__),src_common_noti__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/common/noti/index.tsx"),xterio_icons__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/xterio-icons/dist/xterio-icons.esm.js"),_XS_Text__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/packages/XS-Text/index.tsx"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement,Sort=[12,16,24,32,40,48,64,72,80,120,"Scalable"];const __WEBPACK_DEFAULT_EXPORT__={title:"Base/XS-Icon",component:xterio_icons__WEBPACK_IMPORTED_MODULE_3__.IconAppstoreScalable,parameters:{layout:"centered"},tags:["autodocs"]};var Template=function Template(){return __jsx("div",{className:"text-xwhite"},Sort.map((function(s){var icons=Object.values(xterio_icons__WEBPACK_IMPORTED_MODULE_3__).filter((function(i){var _i$name;return null===(_i$name=i.name)||void 0===_i$name?void 0:_i$name.endsWith("".concat(s))}));return null!=icons&&icons.length?__jsx(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,__jsx(_XS_Text__WEBPACK_IMPORTED_MODULE_4__.Z,{font:"poppinsBold",className:"py-2"},"Icon Size: ",s),__jsx("ul",{className:"flex items-center flex-warp",style:{width:800},key:s},icons.map((function(Icon){return __jsx("li",{key:Icon.name},__jsx(react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_1___default(),{text:"<".concat(Icon.name,' color="" size={').concat(s,"} />"),onCopy:function onCopy(){return src_common_noti__WEBPACK_IMPORTED_MODULE_2__.Z.toast(Icon.name+" Copied")}},__jsx(Icon,{size:"Scalable"===s?40:s})))})))):null})))};Template.displayName="Template",Template.parameters={...Template.parameters,docs:{...Template.parameters?.docs,source:{originalSource:'() => {\n  return <div className="text-xwhite">\n      {Sort.map(s => {\n      const icons = Object.values(x).filter(i => i.name?.endsWith(`${s}`));\n      return icons?.length ? <>\n            <XSText font="poppinsBold" className="py-2">\n              Icon Size: {s}\n            </XSText>\n            <ul className="flex items-center flex-warp" style={{\n          width: 800\n        }} key={s}>\n              {icons.map(Icon => <li key={Icon.name}>\n                  <CopyToClipboard text={`<${Icon.name} color="" size={${s}} />`} onCopy={() => TOAST.toast(Icon.name + \' Copied\')}>\n                    <Icon size={s === \'Scalable\' ? 40 : s} />\n                  </CopyToClipboard>\n                </li>)}\n            </ul>\n          </> : null;\n    })}\n    </div>;\n}',...Template.parameters?.docs?.source}}};const __namedExportsOrder=["Template"]},"./src/packages/XS-Text/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement,StyleMap={terminaLight:"font-termina font-light",termina:"font-termina font-medium",terminaBold:"font-termina font-bold",poppins:"font-poppins font-medium",poppinsBold:"font-poppins font-bold",poppinsLight:"font-poppins font-xlight"},XSText=function XSText(_ref){var _ref$text=_ref.text,text=void 0===_ref$text?"color":_ref$text,font=_ref.font,_ref$className=_ref.className,className=void 0===_ref$className?"text-sm":_ref$className,children=_ref.children;return __jsx("p",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("leading-none font-bold",StyleMap[font],className)},children||text)};XSText.displayName="XSText";const __WEBPACK_DEFAULT_EXPORT__=XSText;try{XSText.displayName="XSText",XSText.__docgenInfo={description:"",displayName:"XSText",props:{text:{defaultValue:{value:"color"},description:"需要展示的文字",name:"text",required:!1,type:{name:"string"}},className:{defaultValue:{value:"text-sm"},description:"拓展样式",name:"className",required:!1,type:{name:"string"}},font:{defaultValue:null,description:"字体设置",name:"font",required:!0,type:{name:"enum",value:[{value:'"terminaLight"'},{value:'"termina"'},{value:'"terminaBold"'},{value:'"poppins"'},{value:'"poppinsBold"'},{value:'"poppinsLight"'}]}},children:{defaultValue:null,description:"优先于text展示",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/packages/XS-Text/index.tsx#XSText"]={docgenInfo:XSText.__docgenInfo,name:"XSText",path:"src/packages/XS-Text/index.tsx#XSText"})}catch(__react_docgen_typescript_loader_error){}}}]);